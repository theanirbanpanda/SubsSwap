rm -rf src && mkdir -p src/{components,features/{auth,listings,swap},hooks,layouts,pages,utils} && \
echo "import React, { createContext, useContext, useState, useEffect } from 'react'; const AuthContext = createContext(); export function AuthProvider({ children }) { const [user, setUser] = useState(null); useEffect(() => { const stored = localStorage.getItem('user'); if (stored) setUser(JSON.parse(stored)); }, []); const login = (username, password) => { if (username && password) { const fakeUser = { id: 1, username }; setUser(fakeUser); localStorage.setItem('user', JSON.stringify(fakeUser)); return true; } return false; }; const logout = () => { setUser(null); localStorage.removeItem('user'); }; const signup = (username, password) => { if (username && password) { const newUser = { id: Date.now(), username }; setUser(newUser); localStorage.setItem('user', JSON.stringify(newUser)); return true; } return false; }; return <AuthContext.Provider value={{ user, login, logout, signup }}>{children}</AuthContext.Provider>; } export function useAuth() { const context = useContext(AuthContext); if (!context) throw new Error('useAuth must be used within AuthProvider'); return context; }" > src/features/auth/AuthContext.jsx && \
echo "import React from 'react'; import { Navigate } from 'react-router-dom'; import { useAuth } from '../features/auth/AuthContext'; export default function PrivateRoute({ children }) { const { user } = useAuth(); if (!user) return <Navigate to='/login' replace />; return children; }" > src/components/PrivateRoute.jsx && \
echo "import React from 'react'; import { useAuth } from '../features/auth/AuthContext'; import { useNavigate, Link } from 'react-router-dom'; export default function Navbar() { const { user, logout } = useAuth(); const navigate = useNavigate(); const handleLogout = () => { logout(); navigate('/login'); }; return (<nav className='navbar'><Link to='/' className='logo'>SubSwap</Link><div className='nav-right'>{user ? (<><span>Hi, {user.username}</span><button onClick={handleLogout}>Logout</button></>) : (<Link to='/login'>Login</Link>)}</div></nav>); }" > src/components/Navbar.jsx && \
echo "import React, { useState } from 'react'; import { useAuth } from '../features/auth/AuthContext'; import { useNavigate, Link } from 'react-router-dom'; export default function Login() { const [username, setUsername] = useState(''); const [password, setPassword] = useState(''); const [error, setError] = useState(null); const { login } = useAuth(); const navigate = useNavigate(); const handleSubmit = e => { e.preventDefault(); if (login(username, password)) { navigate('/'); } else { setError('Invalid credentials'); } }; return (<div className='auth-form'><h2>Login</h2><form onSubmit={handleSubmit}><input placeholder='Username' value={username} onChange={e => setUsername(e.target.value)} required /><input type='password' placeholder='Password' value={password} onChange={e => setPassword(e.target.value)} required /><button type='submit'>Login</button></form><p>Don't have an account? <Link to='/signup'>Sign up</Link></p>{error && <p className='error'>{error}</p>}</div>); }" > src/pages/Login.jsx && \
echo "import React, { useState } from 'react'; import { useAuth } from '../features/auth/AuthContext'; import { useNavigate, Link } from 'react-router-dom'; export default function Signup() { const [username, setUsername] = useState(''); const [password, setPassword] = useState(''); const [error, setError] = useState(null); const { signup } = useAuth(); const navigate = useNavigate(); const handleSubmit = e => { e.preventDefault(); if (signup(username, password)) { navigate('/'); } else { setError('Failed to sign up'); } }; return (<div className='auth-form'><h2>Sign Up</h2><form onSubmit={handleSubmit}><input placeholder='Username' value={username} onChange={e => setUsername(e.target.value)} required /><input type='password' placeholder='Password' value={password} onChange={e => setPassword(e.target.value)} required /><button type='submit'>Sign Up</button></form><p>Already have an account? <Link to='/login'>Login</Link></p>{error && <p className='error'>{error}</p>}</div>); }" > src/pages/Signup.jsx && \
echo "import React, { useState, useEffect } from 'react'; import { useAuth } from '../features/auth/AuthContext'; export default function Profile() { const { user } = useAuth(); const [username, setUsername] = useState(user?.username || ''); const handleUpdate = e => { e.preventDefault(); alert('Profile updated: ' + username); }; return (<div className='profile'><h2>Profile</h2><form onSubmit={handleUpdate}><label>Username<input value={username} onChange={e => setUsername(e.target.value)} /></label><button type='submit'>Update</button></form></div>); }" > src/pages/Profile.jsx && \
echo "import React, { useState } from 'react'; import { useAuth } from '../features/auth/AuthContext'; export default function Share() { const { user } = useAuth(); const [title, setTitle] = useState(''); const [category, setCategory] = useState(''); const handleSubmit = e => { e.preventDefault(); alert('Shared: ' + title + ' in ' + category); setTitle(''); setCategory(''); }; return (<div className='share'><h2>Share a Subscription</h2><form onSubmit={handleSubmit}><input placeholder='Subscription Name' value={title} onChange={e => setTitle(e.target.value)} required /><input placeholder='Category' value={category} onChange={e => setCategory(e.target.value)} required /><button type='submit'>Share</button></form></div>); }" > src/pages/Share.jsx && \
echo "import React, { useState } from 'react'; export default function Requests() { const [requests] = useState([]); return (<div className='requests'><h2>Swap Requests</h2>{requests.length === 0 ? (<p>No swap requests yet.</p>) : (requests.map((r, i) => <div key={i}>{r}</div>))}</div>); }" > src/pages/Requests.jsx && \
echo "import React from 'react'; import { useAuth } from '../features/auth/AuthContext'; export default function Home() { const { user } = useAuth(); const subscriptions = [{ id: 1, title: 'Netflix', category: 'Entertainment' }, { id: 2, title: 'Spotify', category: 'Music' }, { id: 3, title: 'Skillshare', category: 'Education' }]; return (<div className='home'><h2>Available Subscriptions</h2><input placeholder='Search subscriptions...' /><ul>{subscriptions.map(s => (<li key={s.id}><strong>{s.title}</strong> - {s.category}</li>))}</ul></div>); }" > src/pages/Home.jsx && \
echo "import React from 'react'; import { BrowserRouter, Routes, Route } from 'react-router-dom'; import { AuthProvider } from './features/auth/AuthContext'; import PrivateRoute from './components/PrivateRoute'; import Navbar from './components/Navbar'; import Home from './pages/Home'; import Login from './pages/Login'; import Signup from './pages/Signup'; import Profile from './pages/Profile'; import Share from './pages/Share'; import Requests from './pages/Requests'; export default function App() { return (<AuthProvider><BrowserRouter><Navbar /><Routes><Route path='/login' element={<Login />} /><Route path='/signup' element={<Signup />} /><Route path='/' element={<PrivateRoute><Home /></PrivateRoute>} /><Route path='/profile' element={<PrivateRoute><Profile /></PrivateRoute>} /><Route path='/share' element={<PrivateRoute><Share /></PrivateRoute>} /><Route path='/requests' element={<PrivateRoute><Requests /></PrivateRoute>} /></Routes></BrowserRouter></AuthProvider>); }" > src/App.jsx && \
echo "import React from 'react'; import ReactDOM from 'react-dom/client'; import App from './App'; import './index.css'; ReactDOM.createRoot(document.getElementById('root')).render(<React.StrictMode><App /></React.StrictMode>);" > src/main.jsx && \
echo "body { margin: 0; font-family: Arial, sans-serif; background: #f9fafb; } .navbar { display: flex; justify-content: space-between; padding: 1rem; background: #0d6efd; color: white; } .navbar .logo { font-weight: bold; font-size: 1.2rem; text-decoration: none; color: white; } .nav-right > * { margin-left: 1rem; } .auth-form, .profile, .share, .requests, .home { max-width: 400px; margin: 2rem auto; background: white; padding: 1rem; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); } input { width: 100%; margin: 0.5rem 0; padding: 0.5rem; } button { padding: 0.5rem 1rem; background: #0d6efd; border: none; color: white; border-radius: 4px; cursor: pointer; } button:hover { background: #084cdb; } .error { color: red; }" > src/index.css
